services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./backend/services/docker/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      # Mount source code for hot reload
      - ./backend:/app
      # Exclude cache and build artifacts
      - /app/.venv
      - /app/__pycache__
      - ./backend/.env:/app/.env
    env_file:
      - ./backend/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_SSL=False
      - ENV_MODE=local
    depends_on:
      redis:
        condition: service_healthy
      worker:
        condition: service_started

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: uv run dramatiq --skip-logging --processes 2 --threads 2 run_agent_background
    volumes:
      # Mount source code for hot reload
      - ./backend:/app
      # Exclude cache and build artifacts
      - /app/.venv
      - /app/__pycache__
      - ./backend/.env:/app/.env:ro
    env_file:
      - ./backend/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_SSL=False
      - ENV_MODE=local
    depends_on:
      redis:
        condition: service_healthy

  frontend:
    init: true
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot reload
      - ./frontend:/app
      # Exclude node_modules and .next to use container versions
      - /app/node_modules
      - /app/.next
      - ./frontend/.env.local:/app/.env.local:ro
    environment:
      - WATCHPACK_POLLING=true  # Enable polling for better compatibility
    depends_on:
      - backend

volumes:
  redis_data:
